xaxis = list(title = "Salari"),
yaxis = list(title = "Comptatge"))
})
output$comparativa_plot <- renderPlotly({
mean_global <- mean(df$`Salary in USD`, na.rm = TRUE)
mean_filtrado <- mean(filtered_data()$`Salary in USD`, na.rm = TRUE)
plot_ly(
x = c("Global", "Filtrat"),
y = c(mean_global, mean_filtrado),
type = "bar",
marker = list(color = c("#7f8c8d", "#27ae60")),
text = c(dollar(mean_global), dollar(mean_filtrado)),
hoverinfo = "text+x"
) %>%
layout(title = "Comparació del salari mitjà",
xaxis = list(title = ""),
yaxis = list(title = "Salari mitjà (USD)", rangemode = "tozero"))
})
output$summary_table <- renderDataTable({
filtered_data() %>%
summarise(
Observacions = n(),
Salari_Mitja = dollar(mean(`Salary in USD`, na.rm = TRUE)),
Salari_Màxim = dollar(max(`Salary in USD`, na.rm = TRUE)),
Salari_Mínim = dollar(min(`Salary in USD`, na.rm = TRUE))
)
})
output$recom_countries <- renderDataTable({
filtered_data() %>%
group_by(`Company Location`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
arrange(desc(Salari_Mig)) %>%
slice_head(n = 3)
})
output$recom_title <- renderPrint({
best_title <- filtered_data() %>%
group_by(`Job Title`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
arrange(desc(Salari_Mig)) %>%
slice_head(n = 1) %>%
pull(`Job Title`)
best_title
})
output$recom_text <- renderText({
exp <- input$experience
size <- input$company_size
if (exp == "Entry") {
if (size == "Small") {
return("Començant a una empresa petita et permetrà adquirir coneixements amplis i responsabilitats ràpidament.")
} else {
return("Com a júnior en una empresa mitjana o gran, podràs aprendre d’equips grans i estabilitzar la teva carrera.")
}
} else if (exp == "Mid") {
if (size == "Large") {
return("Amb experiència mitjana i en una empresa gran, és un bon moment per escalar posicions i negociar el teu salari.")
} else {
return("Empreses petites o mitjanes et poden oferir flexibilitat i lideratge a mitjà termini.")
}
} else if (exp == "Senior") {
return("Amb experiència alta, busca països amb alts salaris i empreses grans que valorin la teva trajectòria.")
} else {
return("Explora opcions globals i aprofita la teva experiència per aconseguir projectes d'alt impacte.")
}
})
shinyApp(ui = ui, server = server)  # <- Esto ya está definido abajo
shinyApp(ui = ui, server = server)  # <- Esto ya está definido abajo
# Versión 3 - Explorador de Salarios con diseño profesional
# Instalar si no tienes estos paquetes
# install.packages(c("shiny", "dplyr", "ggplot2", "readr", "plotly", "DT", "scales", "bslib"))
library(shiny)
library(dplyr)
library(ggplot2)
library(readr)
library(plotly)
library(DT)
library(scales)
library(bslib)
# Cargar el dataset
df <- read_csv("Data_Science_Salaries.csv")
# Añadir columna de región y teletrabajo
df <- df %>% mutate(
Region = case_when(
`Company Location` %in% c("United States", "Canada", "Mexico") ~ "América del Norte",
`Company Location` %in% c("Brazil", "Colombia", "Argentina", "Chile") ~ "América del Sur",
`Company Location` %in% c("Germany", "France", "United Kingdom", "Netherlands", "Spain", "Italy", "Romania", "Greece") ~ "Europa",
`Company Location` %in% c("India", "Vietnam", "Singapore", "China") ~ "Asia",
`Company Location` %in% c("Nigeria", "South Africa") ~ "África",
TRUE ~ "Altres"
),
Teletrabajo = if_else(`Company Location` == `Employee Residence`, "Presencial", "Remot")
)
# UI mejorado con layout moderno
theme_config <- bs_theme(bootswatch = "flatly", base_font = font_google("Roboto"))
ui <- fluidPage(
theme = theme_config,
div(
class = "container",
br(),
div(
style = "text-align: center;",
h1("\U1F4BC Explorador de Salarios en el Sector de les Dades", style = "font-weight: 700;"),
p("Una aplicació interactiva per analitzar salaris globals en el sector de la ciència de dades.", style = "font-size: 18px;")
),
br(),
fluidRow(
column(
width = 3,
wellPanel(
h4("\U1F50D Filtres", style = "font-weight: bold;"),
selectInput("experience", "Nivell d'experiència:",
choices = unique(df$`Experience Level`), selected = "Mid"),
selectInput("company_size", "Mida de l'empresa:",
choices = unique(df$`Company Size`), selected = "Medium"),
selectInput("region", "Regió (opcional):",
choices = c("Totes", unique(df$Region)), selected = "Totes"),
selectInput("remote", "Modalitat de treball:",
choices = c("Totes", "Remot", "Presencial"), selected = "Totes"),
br(),
downloadButton("download_data", "Descarregar dades filtrades", class = "btn btn-success")
)
),
column(
width = 9,
tabsetPanel(
tabPanel(tagList(icon("chart-bar"), span("Salari mitjà per país")),
br(),
plotlyOutput("salary_plot", height = "600px")),
tabPanel(tagList(icon("dollar-sign"), span("Treballs millor pagats")),
br(),
plotlyOutput("title_plot", height = "600px")),
tabPanel(tagList(icon("chart-area"), span("Distribució salarial")),
br(),
plotlyOutput("dist_plot", height = "600px")),
tabPanel(tagList(icon("balance-scale"), span("Comparació global")),
br(),
plotlyOutput("comparativa_plot", height = "600px")),
tabPanel(tagList(icon("table"), span("Estadístiques resum")),
br(),
dataTableOutput("summary_table")),
tabPanel(tagList(icon("lightbulb"), span("Recomanacions")),
br(),
h4("Millors països segons el teu perfil:"),
dataTableOutput("recom_countries"),
h4("Títol de treball millor pagat:"),
verbatimTextOutput("recom_title"),
h4("Recomanació personalitzada:"),
textOutput("recom_text")
)
)
)
),
br()
)
)
server <- function(input, output) {
# Filtrado reactivo de dades amb region i modalitat de treball
filtered_data <- reactive({
data <- df %>%
filter(`Experience Level` == input$experience,
`Company Size` == input$company_size)
if (input$region != "Totes") {
data <- data %>% filter(Region == input$region)
}
if (input$remote != "Totes") {
data <- data %>% filter(Teletrabajo == input$remote)
}
data
})
output$download_data <- downloadHandler(
filename = function() {
paste("salarios_filtrados.csv")
},
content = function(file) {
write.csv(filtered_data(), file, row.names = FALSE)
}
)
output$salary_plot <- renderPlotly({
filtered_data() %>%
group_by(`Company Location`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
plot_ly(
x = ~Salari_Mig,
y = ~reorder(`Company Location`, Salari_Mig),
type = "bar",
orientation = "h",
marker = list(color = "#2c3e50"),
text = ~paste("$", formatC(Salari_Mig, format = "f", digits = 0, big.mark = ",")),
hoverinfo = "text+y"
) %>%
layout(
title = list(text = "Salari mitjà per país", font = list(size = 20)),
xaxis = list(title = "Salari mitjà (USD)", tickfont = list(size = 12)),
yaxis = list(title = "País", tickfont = list(size = 12))
)
})
output$title_plot <- renderPlotly({
filtered_data() %>%
group_by(`Job Title`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
slice_max(order_by = Salari_Mig, n = 10) %>%
plot_ly(
x = ~Salari_Mig,
y = ~reorder(`Job Title`, Salari_Mig),
type = "bar",
orientation = "h",
marker = list(color = "#e67e22"),
text = ~paste("$", formatC(Salari_Mig, format = "f", digits = 0, big.mark = ",")),
hoverinfo = "text+y"
) %>%
layout(
title = list(text = "Top 10 feines més ben pagades (segons filtre)", font = list(size = 20)),
xaxis = list(title = "Salari mitjà (USD)", tickfont = list(size = 12)),
yaxis = list(title = "Títol del lloc de treball", tickfont = list(size = 12))
)
})
output$dist_plot <- renderPlotly({
plot_ly(filtered_data(), x = ~`Salary in USD`, type = "histogram", nbinsx = 30, marker = list(color = "#8e44ad")) %>%
layout(title = "Distribució del salari (USD)",
xaxis = list(title = "Salari"),
yaxis = list(title = "Comptatge"))
})
output$comparativa_plot <- renderPlotly({
mean_global <- mean(df$`Salary in USD`, na.rm = TRUE)
mean_filtrado <- mean(filtered_data()$`Salary in USD`, na.rm = TRUE)
plot_ly(
x = c("Global", "Filtrat"),
y = c(mean_global, mean_filtrado),
type = "bar",
marker = list(color = c("#7f8c8d", "#27ae60")),
text = c(dollar(mean_global), dollar(mean_filtrado)),
hoverinfo = "text+x"
) %>%
layout(title = "Comparació del salari mitjà",
xaxis = list(title = ""),
yaxis = list(title = "Salari mitjà (USD)", rangemode = "tozero"))
})
output$summary_table <- renderDataTable({
filtered_data() %>%
summarise(
Observacions = n(),
Salari_Mitja = dollar(mean(`Salary in USD`, na.rm = TRUE)),
Salari_Màxim = dollar(max(`Salary in USD`, na.rm = TRUE)),
Salari_Mínim = dollar(min(`Salary in USD`, na.rm = TRUE))
)
})
output$recom_countries <- renderDataTable({
filtered_data() %>%
group_by(`Company Location`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
arrange(desc(Salari_Mig)) %>%
slice_head(n = 3)
})
output$recom_title <- renderPrint({
best_title <- filtered_data() %>%
group_by(`Job Title`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
arrange(desc(Salari_Mig)) %>%
slice_head(n = 1) %>%
pull(`Job Title`)
best_title
})
output$recom_text <- renderText({
exp <- input$experience
size <- input$company_size
if (exp == "Entry") {
if (size == "Small") {
return("Començant a una empresa petita et permetrà adquirir coneixements amplis i responsabilitats ràpidament.")
} else {
return("Com a júnior en una empresa mitjana o gran, podràs aprendre d’equips grans i estabilitzar la teva carrera.")
}
} else if (exp == "Mid") {
if (size == "Large") {
return("Amb experiència mitjana i en una empresa gran, és un bon moment per escalar posicions i negociar el teu salari.")
} else {
return("Empreses petites o mitjanes et poden oferir flexibilitat i lideratge a mitjà termini.")
}
} else if (exp == "Senior") {
return("Amb experiència alta, busca països amb alts salaris i empreses grans que valorin la teva trajectòria.")
} else {
return("Explora opcions globals i aprofita la teva experiència per aconseguir projectes d'alt impacte.")
}
})
runApp('C:/Users/adria/Desktop')
runApp('C:/Users/adria/Desktop')
runApp('C:/Users/adria/Desktop')
runApp('C:/Users/adria/Desktop')
runApp()
# Versión 3 - Explorador de Salarios con diseño profesional
# Instalar si no tienes estos paquetes
# install.packages(c("shiny", "dplyr", "ggplot2", "readr", "plotly", "DT", "scales", "bslib"))
library(shiny)
library(dplyr)
library(ggplot2)
library(readr)
library(plotly)
library(DT)
library(scales)
library(bslib)
# Cargar el dataset
df <- read_csv("Data_Science_Salaries.csv")
# Añadir columna de región y teletrabajo
df <- df %>% mutate(
Region = case_when(
`Company Location` %in% c("United States", "Canada", "Mexico") ~ "América del Norte",
`Company Location` %in% c("Brazil", "Colombia", "Argentina", "Chile") ~ "América del Sur",
`Company Location` %in% c("Germany", "France", "United Kingdom", "Netherlands", "Spain", "Italy", "Romania", "Greece") ~ "Europa",
`Company Location` %in% c("India", "Vietnam", "Singapore", "China") ~ "Asia",
`Company Location` %in% c("Nigeria", "South Africa") ~ "África",
TRUE ~ "Altres"
),
Teletrabajo = if_else(`Company Location` == `Employee Residence`, "Presencial", "Remot")
)
# UI mejorado con layout moderno
theme_config <- bs_theme(bootswatch = "flatly", base_font = font_google("Roboto"))
ui <- fluidPage(
theme = theme_config,
div(
class = "container",
br(),
div(
style = "text-align: center;",
h1("\U1F4BC Explorador de Salarios en el Sector de les Dades", style = "font-weight: 700;"),
p("Una aplicació interactiva per analitzar salaris globals en el sector de la ciència de dades.", style = "font-size: 18px;")
),
br(),
fluidRow(
column(
width = 3,
wellPanel(
h4("\U1F50D Filtres", style = "font-weight: bold;"),
selectInput("experience", "Nivell d'experiència:",
choices = unique(df$`Experience Level`), selected = "Mid"),
selectInput("company_size", "Mida de l'empresa:",
choices = unique(df$`Company Size`), selected = "Medium"),
selectInput("region", "Regió (opcional):",
choices = c("Totes", unique(df$Region)), selected = "Totes"),
selectInput("remote", "Modalitat de treball:",
choices = c("Totes", "Remot", "Presencial"), selected = "Totes"),
br(),
downloadButton("download_data", "Descarregar dades filtrades", class = "btn btn-success")
)
),
column(
width = 9,
tabsetPanel(
tabPanel(tagList(icon("chart-bar"), span("Salari mitjà per país")),
br(),
plotlyOutput("salary_plot", height = "600px")),
tabPanel(tagList(icon("dollar-sign"), span("Treballs millor pagats")),
br(),
plotlyOutput("title_plot", height = "600px")),
tabPanel(tagList(icon("chart-area"), span("Distribució salarial")),
br(),
plotlyOutput("dist_plot", height = "600px")),
tabPanel(tagList(icon("balance-scale"), span("Comparació global")),
br(),
plotlyOutput("comparativa_plot", height = "600px")),
tabPanel(tagList(icon("table"), span("Estadístiques resum")),
br(),
dataTableOutput("summary_table")),
tabPanel(tagList(icon("lightbulb"), span("Recomanacions")),
br(),
h4("Millors països segons el teu perfil:"),
dataTableOutput("recom_countries"),
h4("Títol de treball millor pagat:"),
verbatimTextOutput("recom_title"),
h4("Recomanació personalitzada:"),
textOutput("recom_text")
)
)
)
),
br()
)
)
server <- function(input, output) {
# Filtrado reactivo de dades amb region i modalitat de treball
filtered_data <- reactive({
data <- df %>%
filter(`Experience Level` == input$experience,
`Company Size` == input$company_size)
if (input$region != "Totes") {
data <- data %>% filter(Region == input$region)
}
if (input$remote != "Totes") {
data <- data %>% filter(Teletrabajo == input$remote)
}
data
})
output$download_data <- downloadHandler(
filename = function() {
paste("salarios_filtrados.csv")
},
content = function(file) {
write.csv(filtered_data(), file, row.names = FALSE)
}
)
output$salary_plot <- renderPlotly({
filtered_data() %>%
group_by(`Company Location`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
plot_ly(
x = ~Salari_Mig,
y = ~reorder(`Company Location`, Salari_Mig),
type = "bar",
orientation = "h",
marker = list(color = "#2c3e50"),
text = ~paste("$", formatC(Salari_Mig, format = "f", digits = 0, big.mark = ",")),
hoverinfo = "text+y"
) %>%
layout(
title = list(text = "Salari mitjà per país", font = list(size = 20)),
xaxis = list(title = "Salari mitjà (USD)", tickfont = list(size = 12)),
yaxis = list(title = "País", tickfont = list(size = 12))
)
})
output$title_plot <- renderPlotly({
filtered_data() %>%
group_by(`Job Title`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
slice_max(order_by = Salari_Mig, n = 10) %>%
plot_ly(
x = ~Salari_Mig,
y = ~reorder(`Job Title`, Salari_Mig),
type = "bar",
orientation = "h",
marker = list(color = "#e67e22"),
text = ~paste("$", formatC(Salari_Mig, format = "f", digits = 0, big.mark = ",")),
hoverinfo = "text+y"
) %>%
layout(
title = list(text = "Top 10 feines més ben pagades (segons filtre)", font = list(size = 20)),
xaxis = list(title = "Salari mitjà (USD)", tickfont = list(size = 12)),
yaxis = list(title = "Títol del lloc de treball", tickfont = list(size = 12))
)
})
output$dist_plot <- renderPlotly({
plot_ly(filtered_data(), x = ~`Salary in USD`, type = "histogram", nbinsx = 30, marker = list(color = "#8e44ad")) %>%
layout(title = "Distribució del salari (USD)",
xaxis = list(title = "Salari"),
yaxis = list(title = "Comptatge"))
})
output$comparativa_plot <- renderPlotly({
mean_global <- mean(df$`Salary in USD`, na.rm = TRUE)
mean_filtrado <- mean(filtered_data()$`Salary in USD`, na.rm = TRUE)
plot_ly(
x = c("Global", "Filtrat"),
y = c(mean_global, mean_filtrado),
type = "bar",
marker = list(color = c("#7f8c8d", "#27ae60")),
text = c(dollar(mean_global), dollar(mean_filtrado)),
hoverinfo = "text+x"
) %>%
layout(title = "Comparació del salari mitjà",
xaxis = list(title = ""),
yaxis = list(title = "Salari mitjà (USD)", rangemode = "tozero"))
})
output$summary_table <- renderDataTable({
filtered_data() %>%
summarise(
Observacions = n(),
Salari_Mitja = dollar(mean(`Salary in USD`, na.rm = TRUE)),
Salari_Màxim = dollar(max(`Salary in USD`, na.rm = TRUE)),
Salari_Mínim = dollar(min(`Salary in USD`, na.rm = TRUE))
)
})
output$recom_countries <- renderDataTable({
filtered_data() %>%
group_by(`Company Location`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
arrange(desc(Salari_Mig)) %>%
slice_head(n = 3)
})
output$recom_title <- renderPrint({
best_title <- filtered_data() %>%
group_by(`Job Title`) %>%
summarise(Salari_Mig = mean(`Salary in USD`, na.rm = TRUE)) %>%
arrange(desc(Salari_Mig)) %>%
slice_head(n = 1) %>%
pull(`Job Title`)
best_title
})
output$recom_text <- renderText({
exp <- input$experience
size <- input$company_size
if (exp == "Entry") {
if (size == "Small") {
return("Començant a una empresa petita et permetrà adquirir coneixements amplis i responsabilitats ràpidament.")
} else {
return("Com a júnior en una empresa mitjana o gran, podràs aprendre d’equips grans i estabilitzar la teva carrera.")
}
} else if (exp == "Mid") {
if (size == "Large") {
return("Amb experiència mitjana i en una empresa gran, és un bon moment per escalar posicions i negociar el teu salari.")
} else {
return("Empreses petites o mitjanes et poden oferir flexibilitat i lideratge a mitjà termini.")
}
} else if (exp == "Senior") {
return("Amb experiència alta, busca països amb alts salaris i empreses grans que valorin la teva trajectòria.")
} else {
return("Explora opcions globals i aprofita la teva experiència per aconseguir projectes d'alt impacte.")
}
})
shinyApp(ui = ui, server = server)  # <- Esto ya está definido abajo
View(server)
View(server)
runApp()
runApp()
runApp()
runApp()
shiny::runApp("app.R")
getwd()
