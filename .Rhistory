grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Numero de màquines",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 50), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(53190 * (1 + (floor(n/36)))) + (3082.41 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 20 * (1 + (floor(n/48)))) + (358.33 * n * 20)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(32080 * (1 + (floor(n/36)))) + (2496.22 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 10 * (1 + (floor(n/48)))) + (358.33 * n * 10)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
5320 + (2613.6 * 12) + (1208 * n) + (100.67 * n * 12)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * n) + (358.33 * 12 * n)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:50
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Numero de màquines",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 50), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(23636 * (1 + (floor(n/36)))) + (2261.74 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 10 * (1 + (floor(n/48)))) + (358.33 * n * 10)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(23636 * (1 + (floor(n/36)))) + (2261.74 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 6 * (1 + (floor(n/48)))) + (358.33 * n * 6)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(23636 * (1 + (floor(n/36)))) + (2261.74 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 6 * (1 + (floor(n/36)))) + (358.33 * n * 6)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(30298 * (1 + (floor(n/36)))) + (2446.73 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 8 * (1 + (floor(n/36)))) + (358.33 * n * 8)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(30298 * (1 + (floor(n/36)))) + (2446.73 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 8 * (1 + (floor(n/48)))) + (358.33 * n * 8)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(35130 * (1 + (floor(n/36)))) + (2580.90 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 10 * (1 + (floor(n/48)))) + (358.33 * n * 10)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
5320 + (2613.6 * 12) + (1208 * n) + (100.67 * n * 12)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * n) + (358.33 * 12 * n)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:50
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos",
x = "Numero de màquines",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 50), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(35130 * (1 + (floor(n/36)))) + (2580.90 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 10 * (1 + (floor(n/48)))) + (358.33 * n * 10)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos amb 10 màquines",
x = "Mesos en funcionament",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio2 <- function(n) {
(4000 * 10 * (1 + (floor(n/48)))) + (358.33 * n * 10)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos amb 10 màquines",
x = "Mesos en funcionament",
y = "Cost",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
5320 + (2613.6 * 12) + (1208 * n) + (100.67 * n * 12)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * n) + (358.33 * 12 * n)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:50
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparación de Costos de Proyectos en un any",
x = "Numero de màquines",
y = "Costo",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 50), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
# Grafica 2
precio1 <- function(n) {
(30298 * (1 + (floor(n/36)))) + (2446.73 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 8 * (1 + (floor(n/48)))) + (358.33 * n * 8)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparació de Costos de Proyectos amb 8 màquines",
x = "Mesos en funcionament",
y = "Cost",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
precio1 <- function(n) {
(23636 * (1 + (floor(n/36)))) + (2261.74 * n)
}
# Define la función para calcular Precio2
precio2 <- function(n) {
(4000 * 6 * (1 + (floor(n/48)))) + (358.33 * n * 6)
}
# Crea un vector de valores para "n" (por ejemplo, de 1 a 10)
n_values <- 0:120
# Calcula los precios para cada valor de "n"
precios1 <- sapply(n_values, precio1)
precios2 <- sapply(n_values, precio2)
# Crea un data frame para el gráfico
datos <- data.frame(
n = rep(n_values, 2),
precio = c(precios1, precios2),
proyecto = factor(rep(c("AWS Cloud", "On Premise"), each = length(n_values)))
)
# Crea el gráfico con ggplot2
grafico <- ggplot(datos, aes(x = n, y = precio, color = proyecto)) +
geom_line(size = 1.2) +  # Crea las líneas, ajusta el grosor con size
labs(
title = "Comparació de Costos de Proyectos amb 6 màquines",
x = "Mesos en funcionament",
y = "Cost",
color = "Proyecto"
) +
scale_x_continuous(limits = c(0, 120), expand = c(0, 0)) +
theme_bw() +  # Un tema de gráfico agradable
theme(plot.title = element_text(hjust = 0.5)) # Centra el título
# Muestra el gráfico
print(grafico)
shiny::runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
shiny::runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
runApp('GitHub/Estudi_salaris_BigData')
